---
- name: Configure host
  hosts: all
  become: true
  vars_files:
    - ./vars.yml

  pre_tasks:
    - name: Set hostname
      ansible.builtin.hostname:
        name: "{{ host_name }}"
        use: systemd

    - name: Import the vagrant key
      apt_key:
        url: https://apt.releases.hashicorp.com/gpg
        state: present

    - name: Add repository vagrant
      apt_repository:
        repo: "deb https://apt.releases.hashicorp.com lunar main"
        state: present
        update_cache: yes

    - name: Import the tailscale key
      apt_key:
        url: https://pkgs.tailscale.com/stable/ubuntu/mantic.noarmor.gpg
        state: present

    - name: Add repository tailscale
      apt_repository:
        repo: "deb https://pkgs.tailscale.com/stable/ubuntu lunar main"
        state: present

    - name: update cache and upgrade
      apt: update_cache=yes upgrade=safe cache_valid_time=3600

  tasks:
    - name: Install flatpak (missing in the distro)
      apt:
        name:
          - flatpak

    - name: Add the flathub flatpak repository remote to the user installation
      community.general.flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
        method: user

    - name: Install flatpaks (flathub)
      community.general.flatpak:
        remote: flathub
        method: user
        name: "{{ item }}"
      with_items: "{{ flatpak_packages }}"

    - name: Install packages
      apt:
        name: "{{ item }}"
        state: present
      with_items: "{{ packages_to_install }}"

    - name: get bash-it
      git:
        repo: "{{ bash_it_repo }}"
        dest: "{{ bash_it_dest }}"
        version: "{{ bash_it_version }}"
      become: false

    - name: install bash-it
      shell:
        cmd: ~/.bash_it/install.sh --silent
      args:
        executable: /bin/bash
      become: false

    - name: configure bash-it theme
      shell: |
        echo 'Using Zork bash-it theme.'

        sudo sed -i 's/bobby/zork/g' /home/$USER/.bashrc

        source $HOME/.bashrc

        exit 0
      args:
        executable: /bin/bash
      become: false

    - name: configure bash-it later
      copy:
        dest: "{{ bash_it_setup_file }}"
        content: |
          echo 'Run commands below to enable aliases, plugins, completions.'
          echo 'bash-it enable plugin git base alias-completion'
          echo 'bash-it enable completion git system bash-it'
          echo 'bash-it enable alias git'
          echo 'bash-it reload'
      become: false

    - name: get dotfiles
      git:
        repo: "{{ dotfiles_repo }}"
        dest: "{{ dotfiles_repo_local_destination }}"
        version: "{{ dotfiles_repo_version }}"
      become: false

    - name: Ensure all configured dotfiles are links.
      command: "ls -F {{ dotfiles_home }}/{{ item }}"
      register: existing_dotfile_info
      failed_when: false
      check_mode: false
      changed_when: false
      become: false
      with_items: "{{ dotfiles_files }}"

    - name: Remove existing dotfiles file if a replacement is being linked.
      file:
        path: "{{ dotfiles_home }}/{{ dotfiles_files[item.0] }}"
        state: absent
      when: "'@' not in item.1.stdout"
      with_indexed_items: "{{ existing_dotfile_info.results }}"

    - name: Link dotfiles into home folder.
      file:
        src: "{{ dotfiles_repo_local_destination }}/{{ item }}"
        dest: "{{ dotfiles_home }}/{{ item }}"
        state: link
        mode: 0644
        force: yes
      become: false
      with_items: "{{ dotfiles_files }}"

    - ping:

    - name: Remove dependencies that are not longer required
      apt:
        autoremove: yes
